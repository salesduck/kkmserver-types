import { CommandName, CommandRequest, CommandResponse, TaxVariant, CheckString } from '@project/command';

export enum TypeCheck {
    /**
     * Продажа/приход;
     */
    SELL = 0,

    /**
     * Возврат продажи/прихода;
     */
    PAYBACK = 1,

    /**
     * Корректировка продажи/прихода;
     */
    SELL_CORRECTION = 2,

    /**
     * Корректировка возврата продажи/прихода; (>=ФФД 1.1)
     */
    PAYBACK_CORRECTION = 3,

    /**
     * Покупка/расход;
     */
    PURCHASE = 10,

    /**
     * Возврат покупки/расхода;
     */
    PURCHASE_RETURN = 11,

    /**
     * Корректировка покупки/расхода;
     */
    PURCHASE_CORRECTION = 12,

    /**
     * Корректировка возврата покупки/расхода; (>=ФФД 1.1)
     */
    PURCHASE_RETURN_CORRECTION = 13
}

/**
 * Тип коррекции
 */
export enum CorrectionType {
    /**
     * Самостоятельно
     */
    SELF = 0,

    /**
     * По предписанию
     */
    PRESCRIPTION = 1
}

/**
 * Дополнительный реквизит пользователя тег ОФД 1084
 */
export type UserAttribute = {
    /**
     * Наименование дополнительного реквизита пользователя тег ОД 1085
     */
    Name: string;

    /**
     * Значение дополнительного реквизита пользователя тег ОФД 1086
     */
    Value: string;
};

/**
 * Печать чека
 */
export type RegisterCheckCommandRequest = CommandRequest & {
    Command: CommandName.REGISTER_CHECK;

    /**
     * Тип чека, Тег 1054
     */
    TypeCheck: TypeCheck;

    /**
     * Заводской номер ККМ для поиска. Если "" то ККМ ищется только по NumDevice,
     */
    KktNumber?: string;

    /**
     * ИНН для поиска. Если "" то ищется только по NumDevice,
     * Если NumDevice = 0 а InnKkm заполнено то ККМ ищется только по InnKkm
     */
    InnKkm?: string;

    /**
     * Это фискальный или не фискальный чек
     */
    IsFiscalCheck: boolean;

    /**
     * Не печатать чек на бумагу
     * - Но есть нюансы!!!:
     * -- Некоторые ККТ всегда печатают отчеты.
     * -- Некоторые ККТ всегда печатают чеки если ККТ не зарегистрирована на "Интернет продажи"
     * -- Некоторые ККТ всегда печатают чеки если в данных чека нет телефона или email-а клиента
     * -- А у некоторых это еще зависит и от версии прошивки.
     */
    NotPrint?: boolean;

    /**
     * Количество копий документа
     */
    NumberCopies?: number;

    /**
     * Продавец, тег ОФД 1021
     *
     * @example 'Иванов И.И.';
     */
    CashierName: string;

    /**
     * ИНН продавца тег ОФД 1203
     *
     * @example '430601071197'
     */
    CashierVATIN: string;

    /**
     * Телефон или е-Майл покупателя, Тег ОФД 1008
     * Если чек не печатается (NotPrint = true) то указывать обязательно
     * Формат: Телефон +{Ц} или Email {С}@{C}
     *
     * @example "sochi@papa.com",
     */
    ClientAddress?: string;

    /**
     * Покупатель (клиент) - наименование организации или фамилия, имя, отчество (при наличии), серия и номер паспорта покупателя(клиента). Тег 1227
     * Только с использованием наличных / электронных денежных средств и при выплате выигрыша, получении страховой премии или при страховой выплате.
     *
     * @example "Везучий В.В. РЕ-125486"
     */
    ClientInfo?: string;

    /**
     * ИНН Организации или покупателя(клиента). Тег 1228
     * Только с использованием наличных / электронных денежных средств и при выплате выигрыша, получении страховой премии или при страховой выплате.
     *
     * @example "502906602876",
     */
    ClientINN?: string;

    /**
     * Aдрес электронной почты отправителя чека, Тег ОФД 1117 (если задан при регистрации можно не указывать)
     * Формат: Email {С}@{C}
     *
     * @example "sochi@mama.com",
     */
    SenderEmail?: string;

    /**
     * Адрес расчетов, Тег ОФД 1009 (если не задано - берется из регистрационных данных ККТ)
     */
    AddressSettle?: string;

    /**
     * Место расчетов, Тег ОФД 1187 (если не задано - берется из регистрационных данных ККТ)
     *
     * @example "kkmserver.ru",
     */
    PlaceMarket?: string;

    /**
     * Система налогообложения (СНО) применяемая для чека, Тег 1055
     * Если не указанно - система СНО настроенная в ККМ по умолчанию
     * Комбинация разных СНО не возможна
     * Надо указывать если ККМ настроена на несколько систем СНО
     */
    TaxVariant?: TaxVariant;

    /**
     * Это только для тестов: Получение ключа суб-лицензии :
     * ВНИМАНИЕ: ключ суб-лицензии вы должны генерить у себя на сервере!!!!
     */
    KeySubLicensing?: string;

    /**
     * Тип коррекции. Только для чеков коррекции!
     */
    CorrectionType?: CorrectionType;

    /**
     * Дата документа основания для коррекции, Тег ОФД 1178
     * Только для чеков коррекции!
     *
     * @example '2017-06-21T15:30:45',
     */
    CorrectionBaseDate?: string;

    /**
     * Номер документа основания для коррекции, Тег ОФД 1179
     * Только для чеков коррекции!
     *
     * @example  "MOS-4516",
     */
    CorrectionBaseNumber?: string;

    /**
     * Если надо одновременно автоматически провести транзакцию через эквайринг
     *
     * Эквайринг будет задействован если:
     * 1. чек фискальный,
     * 2. оплата по "ElectronicPayment" не равна 0,
     * 3. PayByProcessing = true
     *
     * Использовать эквайринг:
     * Null - из настроек на сервере,
     * false - не будет,
     * true - будет
     *
     * В тестовом чеке автоматический эквайринг выключен
     */
    PayByProcessing?: boolean;

    /**
     * Номер устройства для эквайринга - Null - из настроек на сервере
     * 0 - любое, число - номер конкретного устройства
     */
    NumDeviceByProcessing?: number | null;

    /**
     * Номер чека для эквайринга
     *
     * @example 'TEST-01';
     */
    ReceiptNumber?: string;

    /**
     * Печатать Слип-чек после чека (а не в чеке)
     */
    PrintSlipAfterCheck?: boolean;

    /**
     * Печатать Слип-чек дополнительно для кассира
     * (основной слип-чек уже будет печататся в составе чека)
     */
    PrintSlipForCashier?: boolean;

    /**
     * Если это чек возврата то возможны два поля для отмены транзакции
     * (если не указано то по эквайрингу будет не отмена а возврат оплаты)
     *
     * RRNCode из операции эквайринга. Только для отмены оплаты!
     * Для Оплаты или возврата оплаты не заполнять!
     */
    RRNCode?: string;

    /**
     * AuthorizationCode из операции эквайринга. Только для отмены оплаты!
     * Для Оплаты или возврата оплаты не заполнять!
     */
    AuthorizationCode?: string;

    /**
     * Дополнительный реквизит пользователя тег ОФД 1084
     */
    UserAttribute?: UserAttribute;

    /**
     * Дополнительный реквизит чека тег 1192
     */
    AdditionalAttribute?: string;

    /**
     * Строки чека
     */
    CheckStrings: CheckString[];

    /**
     * Наличная оплата (2 знака после запятой), Тег 1031
     */
    Cash?: number;

    /**
     * Сумма электронной оплаты (2 знака после запятой), Тег 1081
     */
    ElectronicPayment?: number;

    /**
     * Сумма из предоплаты (зачетом аванса) (2 знака после запятой), Тег 1215
     */
    AdvancePayment?: number;

    /**
     * Сумма постоплатой(в кредит) (2 знака после запятой), Тег 1216
     */
    Credit?: number;

    /**
     * Сумма оплаты встречным предоставлением (сертификаты, др. мат.ценности)
     * (2 знака после запятой), Тег 1217
     */
    CashProvision?: number;
};

export type RegisterCheckCommandResponse = CommandResponse & {
    Command: CommandName.REGISTER_CHECK;

    /**
     * Номер документа
     */
    CheckNumber: number;

    /**
     * Номер смены
     */
    SessionNumber: number;

    /**
     * Номер чека в смене
     */
    SessionCheckNumber: number;

    /**
     * @example 'https://ofd-ya.ru/getFiscalDoc?kktRegId=0000000000061716&fiscalSign=839499349';
     */
    URL: string;

    /**
     * @example 't=20190101T195300&s=0.03&fn=9999078900002838&i=3&fp=839499349&n=1';
     */
    QRCode: string;

    /**
     * Оплачено наличными
     */
    Cash?: number;

    /**
     * Оплачено электронно
     */
    ElectronicPayment?: number;

    /**
     * Оплачено предоплатой (зачетом аванса)
     */
    AdvancePayment?: number;

    /**
     * Постоплатой(в кредит)
     */
    Credit?: number;

    /**
     * Встречным предоставлением (сертификаты, др. мат.ценности)
     */
    CashProvision?: number;
};
